let intervalId;

onmessage = function (e) {
  const { isWorkFE } = e.data;

  async function loadData() {
    try {
      // –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å - –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ JSON —Ñ–∞–π–ª–æ–≤
      const response = await fetch("https://market.csgo.com/api/full-export/RUB.json");
      const data = await response.json();
      const myDate = new Date(data.time * 1000);

      // –°–æ–±–µ—Ä—ë–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
      let allFileData = [];

      if (data.items && data.items.length > 0) {
        for (const item of data.items) {
          try {
            const fileResponse = await fetch(`https://market.csgo.com/api/full-export/${item}`);
            const fileData = await fileResponse.json();

            // fileData ‚Äî —ç—Ç–æ –º–∞—Å—Å–∏–≤ –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∑–Ω–∞—á–∏—Ç –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º
            allFileData.push(...fileData);
          } catch (fileError) {
            console.error(`Error loading file ${item}:`, fileError);
          }
        }
      }

      // üîπ –¢–µ–ø–µ—Ä—å —à–ª—ë–º –≤—Å—ë –æ–¥–Ω–∏–º –∫—É—Å–∫–æ–º
      postMessage({
        type: "fileDataAll",
        myDate,
        fileData: allFileData,
      });

    } catch (error) {
      console.error("Export worker error:", error);
    }
  }

  if (isWorkFE) {
    if (intervalId) clearInterval(intervalId);
    loadData(); // —Å—Ä–∞–∑—É –≤—ã–ø–æ–ª–Ω—è–µ–º
    intervalId = setInterval(loadData, 10000);
  } else {
    clearInterval(intervalId);
    intervalId = null;
  }
};
